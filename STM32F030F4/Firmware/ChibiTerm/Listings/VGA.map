Component: ARM Compiler 5.06 update 7 (build 960) Tool: armlink [4d3601]

==============================================================================

Section Cross References

    startup_stm32f030.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f030.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f030.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f030.o(RESET) refers to startup_stm32f030.o(STACK) for __initial_sp
    startup_stm32f030.o(RESET) refers to startup_stm32f030.o(.text) for Reset_Handler
    startup_stm32f030.o(RESET) refers to vga-min.o(i.PendSV_Handler) for PendSV_Handler
    startup_stm32f030.o(RESET) refers to ps2.o(i.EXTI0_1_IRQHandler) for EXTI0_1_IRQHandler
    startup_stm32f030.o(RESET) refers to vga-min.o(i.TIM3_IRQHandler) for TIM3_IRQHandler
    startup_stm32f030.o(RESET) refers to serial.o(i.USART1_IRQHandler) for USART1_IRQHandler
    startup_stm32f030.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f030.o(.text) refers to rcc.o(i.SystemInit) for SystemInit
    startup_stm32f030.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f030.o(.text) refers to startup_stm32f030.o(HEAP) for Heap_Mem
    startup_stm32f030.o(.text) refers to startup_stm32f030.o(STACK) for Stack_Mem
    vga-min.o(i.Delay) refers to vga-min.o(.data) for .data
    vga-min.o(i.TIM3_IRQHandler) refers to vgafont.o(.constdata) for FONT_TABLE
    vga-min.o(i.TIM3_IRQHandler) refers to vga-min.o(.bss) for .bss
    vga-min.o(i.TIM3_IRQHandler) refers to vga-min.o(.data) for .data
    vga-min.o(i.VGA_Init) refers to vga-min.o(.bss) for .bss
    serial.o(i.PutStr) refers to fifo.o(i.FIFO_Write) for FIFO_Write
    serial.o(i.PutStr) refers to serial.o(.data) for .data
    serial.o(i.Putchar) refers to fifo.o(i.FIFO_Write) for FIFO_Write
    serial.o(i.Putchar) refers to serial.o(.data) for .data
    serial.o(i.Puthex) refers to fifo.o(i.FIFO_Write) for FIFO_Write
    serial.o(i.Puthex) refers to serial.o(.data) for .data
    serial.o(i.Putint) refers to aeabi_sdivfast.o(.text) for __aeabi_uidivmod
    serial.o(i.Putint) refers to fifo.o(i.FIFO_Write) for FIFO_Write
    serial.o(i.Putint) refers to serial.o(.data) for .data
    serial.o(i.USART1_IRQHandler) refers to fifo.o(i.FIFO_Write) for FIFO_Write
    serial.o(i.USART1_IRQHandler) refers to fifo.o(i.FIFO_Read) for FIFO_Read
    serial.o(i.USART1_IRQHandler) refers to serial.o(.data) for .data
    serial.o(i.USART_Init) refers to aeabi_sdivfast.o(.text) for __aeabi_uidivmod
    serial.o(i.USART_Init) refers to fifo.o(i.FIFO_Clear) for FIFO_Clear
    serial.o(i.USART_Init) refers to serial.o(.data) for .data
    fifo.o(i.Getc_Timeout) refers to vga-min.o(.data) for MicroTimer0
    ps2.o(i.EXTI0_1_IRQHandler) refers to fifo.o(i.FIFO_Write) for FIFO_Write
    ps2.o(i.EXTI0_1_IRQHandler) refers to ps2.o(.data) for .data
    ps2.o(i.EXTI0_1_IRQHandler) refers to vga-min.o(.data) for MicroTimer1
    ps2.o(i.NumLockOff) refers to ps2.o(i.PS2_Send) for PS2_Send
    ps2.o(i.NumLockOff) refers to ps2.o(.data) for .data
    ps2.o(i.NumLockOn) refers to ps2.o(i.PS2_Send) for PS2_Send
    ps2.o(i.NumLockOn) refers to ps2.o(.data) for .data
    ps2.o(i.PS2_Init) refers to fifo.o(i.FIFO_Clear) for FIFO_Clear
    ps2.o(i.PS2_Init) refers to ps2.o(.data) for .data
    ps2.o(i.PS2_Send) refers to vga-min.o(i.Delay) for Delay
    ps2.o(i.PS2_Send) refers to ps2.o(.data) for .data
    ps2.o(i.PS2_Subscribe) refers to ps2.o(.data) for .data
    ps2.o(i.PS2_Task) refers to fifo.o(i.Getc) for Getc
    ps2.o(i.PS2_Task) refers to ps2.o(i.PS2_Send) for PS2_Send
    ps2.o(i.PS2_Task) refers to serial.o(i.Putchar) for Putchar
    ps2.o(i.PS2_Task) refers to serial.o(i.PutStr) for PutStr
    ps2.o(i.PS2_Task) refers to ps2.o(.data) for .data
    ps2.o(i.PS2_Task) refers to ps2.o(.constdata) for .constdata
    ps2.o(i.PS2_Update_LED) refers to ps2.o(i.PS2_Send) for PS2_Send
    ps2.o(i.PS2_Update_LED) refers to ps2.o(.data) for .data
    ps2.o(.data) refers to ps2.o(.conststring) for .conststring
    term.o(i.main) refers to vga-min.o(i.VGA_Init) for VGA_Init
    term.o(i.main) refers to serial.o(i.USART_Init) for USART_Init
    term.o(i.main) refers to ps2.o(i.PS2_Init) for PS2_Init
    term.o(i.main) refers to ps2.o(i.PS2_Subscribe) for PS2_Subscribe
    term.o(i.main) refers to ansi.o(i.ANSI_Init) for ANSI_Init
    term.o(i.main) refers to fifo.o(i.FIFO_ReadAvail) for FIFO_ReadAvail
    term.o(i.main) refers to fifo.o(i.Getc) for Getc
    term.o(i.main) refers to ansi.o(i.ANSI_FSM) for ANSI_FSM
    term.o(i.main) refers to ps2.o(i.PS2_Task) for PS2_Task
    term.o(i.main) refers to ansi.o(i.Cursor_Task) for Cursor_Task
    term.o(i.main) refers to term.o(.constdata) for .constdata
    term.o(i.main) refers to term.o(i.onKeyUp) for onKeyUp
    term.o(i.main) refers to term.o(.data) for .data
    term.o(i.main) refers to ansi.o(.data) for Cursor
    term.o(i.main) refers to serial.o(.data) for RxBuf
    term.o(i.main) refers to ps2.o(.data) for PS2_Buf
    term.o(i.onKeyUp) refers to term.o(.data) for .data
    ansi.o(i.ANSICursor_MoveTo) refers to ansi.o(i.PhysicalCursor_MoveTo) for PhysicalCursor_MoveTo
    ansi.o(i.ANSICursor_MoveTo) refers to ansi.o(.data) for .data
    ansi.o(i.ANSI_FSM) refers to ansi.o(i.ControlCode) for ControlCode
    ansi.o(i.ANSI_FSM) refers to ansi.o(i.VGA_Putch) for VGA_Putch
    ansi.o(i.ANSI_FSM) refers to ansi.o(i.ESC_Sequence) for ESC_Sequence
    ansi.o(i.ANSI_FSM) refers to rt_memclr.o(.text) for __aeabi_memclr
    ansi.o(i.ANSI_FSM) refers to rt_ctype_table.o(.text) for __rt_ctype_table
    ansi.o(i.ANSI_FSM) refers to ansi.o(i.CSI_Sequence) for CSI_Sequence
    ansi.o(i.ANSI_FSM) refers to ansi.o(.bss) for .bss
    ansi.o(i.ANSI_Init) refers to aeabi_memset.o(.text) for __aeabi_memset
    ansi.o(i.ANSI_Init) refers to ansi.o(i.Cursor_Reset) for Cursor_Reset
    ansi.o(i.ANSI_Init) refers to ansi.o(i.VerticalBlank_CB) for VerticalBlank_CB
    ansi.o(i.ANSI_Init) refers to vga-min.o(.bss) for VGA
    ansi.o(i.ANSI_Init) refers to ansi.o(.data) for .data
    ansi.o(i.ANSI_Init) refers to ansi.o(.bss) for .bss
    ansi.o(i.BlankChar) refers to ansi.o(.data) for .data
    ansi.o(i.CSI_Sequence) refers to ansi.o(i.PhysicalCursor_MoveTo) for PhysicalCursor_MoveTo
    ansi.o(i.CSI_Sequence) refers to aeabi_memset.o(.text) for __aeabi_memset
    ansi.o(i.CSI_Sequence) refers to ansi.o(i.Cursor_Reset) for Cursor_Reset
    ansi.o(i.CSI_Sequence) refers to ansi.o(i.ScrollRegionDown) for ScrollRegionDown
    ansi.o(i.CSI_Sequence) refers to ansi.o(i.ScrollRegionUp) for ScrollRegionUp
    ansi.o(i.CSI_Sequence) refers to ansi.o(i.ScrollUp) for ScrollUp
    ansi.o(i.CSI_Sequence) refers to ansi.o(i.ScrollDown) for ScrollDown
    ansi.o(i.CSI_Sequence) refers to serial.o(i.Putchar) for Putchar
    ansi.o(i.CSI_Sequence) refers to serial.o(i.Putint) for Putint
    ansi.o(i.CSI_Sequence) refers to serial.o(i.PutStr) for PutStr
    ansi.o(i.CSI_Sequence) refers to ansi.o(i.Cursor_SavePosition) for Cursor_SavePosition
    ansi.o(i.CSI_Sequence) refers to ansi.o(.bss) for .bss
    ansi.o(i.CSI_Sequence) refers to vga-min.o(.bss) for TextBuffer
    ansi.o(i.CSI_Sequence) refers to ansi.o(.data) for .data
    ansi.o(i.CSI_Sequence) refers to ansi.o(i.VGA_Putch) for VGA_Putch
    ansi.o(i.CSI_Sequence) refers to aeabi_sdivfast.o(.text) for __aeabi_uidivmod
    ansi.o(i.CSI_Sequence) refers to ansi.o(i.VGA_Putint) for VGA_Putint
    ansi.o(i.Clear_CSI) refers to rt_memclr.o(.text) for __aeabi_memclr
    ansi.o(i.Clear_CSI) refers to ansi.o(.bss) for .bss
    ansi.o(i.ControlCode) refers to serial.o(i.Putchar) for Putchar
    ansi.o(i.ControlCode) refers to ansi.o(i.VGA_Putch) for VGA_Putch
    ansi.o(i.ControlCode) refers to ansi.o(i.PhysicalCursor_MoveTo) for PhysicalCursor_MoveTo
    ansi.o(i.ControlCode) refers to ansi.o(i.ScrollUp) for ScrollUp
    ansi.o(i.ControlCode) refers to ansi.o(.data) for .data
    ansi.o(i.ControlCode) refers to ansi.o(.bss) for .bss
    ansi.o(i.Cursor_Disable) refers to ansi.o(.data) for .data
    ansi.o(i.Cursor_Disable) refers to vga-min.o(.bss) for TextBuffer
    ansi.o(i.Cursor_Down) refers to ansi.o(i.PhysicalCursor_MoveTo) for PhysicalCursor_MoveTo
    ansi.o(i.Cursor_Down) refers to ansi.o(.data) for .data
    ansi.o(i.Cursor_Enable) refers to ansi.o(.data) for .data
    ansi.o(i.Cursor_HorizontalAbsolute) refers to ansi.o(i.PhysicalCursor_MoveTo) for PhysicalCursor_MoveTo
    ansi.o(i.Cursor_HorizontalAbsolute) refers to ansi.o(.data) for .data
    ansi.o(i.Cursor_Left) refers to ansi.o(i.PhysicalCursor_MoveTo) for PhysicalCursor_MoveTo
    ansi.o(i.Cursor_Left) refers to ansi.o(.data) for .data
    ansi.o(i.Cursor_NextLine) refers to ansi.o(i.PhysicalCursor_MoveTo) for PhysicalCursor_MoveTo
    ansi.o(i.Cursor_NextLine) refers to ansi.o(.data) for .data
    ansi.o(i.Cursor_PreviousLine) refers to ansi.o(i.PhysicalCursor_MoveTo) for PhysicalCursor_MoveTo
    ansi.o(i.Cursor_PreviousLine) refers to ansi.o(.data) for .data
    ansi.o(i.Cursor_Reset) refers to ansi.o(.data) for .data
    ansi.o(i.Cursor_Reset) refers to vga-min.o(.bss) for TextBuffer
    ansi.o(i.Cursor_RestorePosition) refers to ansi.o(i.PhysicalCursor_MoveTo) for PhysicalCursor_MoveTo
    ansi.o(i.Cursor_RestorePosition) refers to ansi.o(.data) for .data
    ansi.o(i.Cursor_Right) refers to ansi.o(i.PhysicalCursor_MoveTo) for PhysicalCursor_MoveTo
    ansi.o(i.Cursor_Right) refers to ansi.o(.data) for .data
    ansi.o(i.Cursor_SavePosition) refers to ansi.o(.data) for .data
    ansi.o(i.Cursor_Task) refers to ansi.o(.data) for .data
    ansi.o(i.Cursor_Task) refers to vga-min.o(.bss) for TextBuffer
    ansi.o(i.Cursor_Up) refers to ansi.o(i.PhysicalCursor_MoveTo) for PhysicalCursor_MoveTo
    ansi.o(i.Cursor_Up) refers to ansi.o(.data) for .data
    ansi.o(i.ESC_Sequence) refers to ansi.o(i.ANSI_Init) for ANSI_Init
    ansi.o(i.ESC_Sequence) refers to ansi.o(i.ScrollDown) for ScrollDown
    ansi.o(i.ESC_Sequence) refers to ansi.o(i.PhysicalCursor_MoveTo) for PhysicalCursor_MoveTo
    ansi.o(i.ESC_Sequence) refers to ansi.o(i.ScrollUp) for ScrollUp
    ansi.o(i.ESC_Sequence) refers to ansi.o(i.Cursor_SavePosition) for Cursor_SavePosition
    ansi.o(i.ESC_Sequence) refers to ansi.o(i.Cursor_RestorePosition) for Cursor_RestorePosition
    ansi.o(i.ESC_Sequence) refers to ansi.o(i.VGA_Putch) for VGA_Putch
    ansi.o(i.ESC_Sequence) refers to ansi.o(.bss) for .bss
    ansi.o(i.ESC_Sequence) refers to ansi.o(.data) for .data
    ansi.o(i.OriginRow) refers to ansi.o(.data) for .data
    ansi.o(i.PhysicalCursor_MoveTo) refers to ansi.o(i.Cursor_Reset) for Cursor_Reset
    ansi.o(i.PhysicalCursor_MoveTo) refers to ansi.o(.data) for .data
    ansi.o(i.PhysicalCursor_MoveTo) refers to vga-min.o(.bss) for TextBuffer
    ansi.o(i.ScrollDown) refers to rt_memmove.o(.text) for __aeabi_memmove
    ansi.o(i.ScrollDown) refers to aeabi_memset.o(.text) for __aeabi_memset
    ansi.o(i.ScrollDown) refers to ansi.o(i.Cursor_Reset) for Cursor_Reset
    ansi.o(i.ScrollDown) refers to ansi.o(.data) for .data
    ansi.o(i.ScrollDown) refers to vga-min.o(.bss) for TextBuffer
    ansi.o(i.ScrollRegionDown) refers to rt_memmove.o(.text) for __aeabi_memmove
    ansi.o(i.ScrollRegionDown) refers to aeabi_memset.o(.text) for __aeabi_memset
    ansi.o(i.ScrollRegionDown) refers to ansi.o(i.Cursor_Reset) for Cursor_Reset
    ansi.o(i.ScrollRegionDown) refers to ansi.o(.data) for .data
    ansi.o(i.ScrollRegionDown) refers to vga-min.o(.bss) for TextBuffer
    ansi.o(i.ScrollRegionUp) refers to rt_memmove.o(.text) for __aeabi_memmove
    ansi.o(i.ScrollRegionUp) refers to aeabi_memset.o(.text) for __aeabi_memset
    ansi.o(i.ScrollRegionUp) refers to ansi.o(i.Cursor_Reset) for Cursor_Reset
    ansi.o(i.ScrollRegionUp) refers to ansi.o(.data) for .data
    ansi.o(i.ScrollRegionUp) refers to vga-min.o(.bss) for TextBuffer
    ansi.o(i.ScrollUp) refers to rt_memmove.o(.text) for __aeabi_memmove
    ansi.o(i.ScrollUp) refers to aeabi_memset.o(.text) for __aeabi_memset
    ansi.o(i.ScrollUp) refers to ansi.o(i.Cursor_Reset) for Cursor_Reset
    ansi.o(i.ScrollUp) refers to ansi.o(.data) for .data
    ansi.o(i.ScrollUp) refers to vga-min.o(.bss) for TextBuffer
    ansi.o(i.VGA_ClearLine) refers to aeabi_memset.o(.text) for __aeabi_memset
    ansi.o(i.VGA_ClearLine) refers to ansi.o(i.Cursor_Reset) for Cursor_Reset
    ansi.o(i.VGA_ClearLine) refers to ansi.o(.data) for .data
    ansi.o(i.VGA_ClearLine) refers to vga-min.o(.bss) for TextBuffer
    ansi.o(i.VGA_ClearLineToEnd) refers to aeabi_memset.o(.text) for __aeabi_memset
    ansi.o(i.VGA_ClearLineToEnd) refers to ansi.o(i.Cursor_Reset) for Cursor_Reset
    ansi.o(i.VGA_ClearLineToEnd) refers to ansi.o(.data) for .data
    ansi.o(i.VGA_ClearLineToEnd) refers to vga-min.o(.bss) for TextBuffer
    ansi.o(i.VGA_ClearLineToStart) refers to aeabi_memset.o(.text) for __aeabi_memset
    ansi.o(i.VGA_ClearLineToStart) refers to ansi.o(i.Cursor_Reset) for Cursor_Reset
    ansi.o(i.VGA_ClearLineToStart) refers to ansi.o(.data) for .data
    ansi.o(i.VGA_ClearLineToStart) refers to vga-min.o(.bss) for TextBuffer
    ansi.o(i.VGA_ClearScreen) refers to aeabi_memset.o(.text) for __aeabi_memset
    ansi.o(i.VGA_ClearScreen) refers to ansi.o(i.Cursor_Reset) for Cursor_Reset
    ansi.o(i.VGA_ClearScreen) refers to ansi.o(.data) for .data
    ansi.o(i.VGA_ClearScreen) refers to vga-min.o(.bss) for TextBuffer
    ansi.o(i.VGA_ClearScreenToEnd) refers to aeabi_memset.o(.text) for __aeabi_memset
    ansi.o(i.VGA_ClearScreenToEnd) refers to ansi.o(i.Cursor_Reset) for Cursor_Reset
    ansi.o(i.VGA_ClearScreenToEnd) refers to ansi.o(.data) for .data
    ansi.o(i.VGA_ClearScreenToEnd) refers to vga-min.o(.bss) for TextBuffer
    ansi.o(i.VGA_ClearScreenToStart) refers to aeabi_memset.o(.text) for __aeabi_memset
    ansi.o(i.VGA_ClearScreenToStart) refers to ansi.o(i.Cursor_Reset) for Cursor_Reset
    ansi.o(i.VGA_ClearScreenToStart) refers to ansi.o(.data) for .data
    ansi.o(i.VGA_ClearScreenToStart) refers to vga-min.o(.bss) for TextBuffer
    ansi.o(i.VGA_PutStr) refers to ansi.o(i.VGA_Putch) for VGA_Putch
    ansi.o(i.VGA_Putch) refers to ansi.o(i.PhysicalCursor_MoveTo) for PhysicalCursor_MoveTo
    ansi.o(i.VGA_Putch) refers to ansi.o(i.ScrollUp) for ScrollUp
    ansi.o(i.VGA_Putch) refers to ansi.o(.data) for .data
    ansi.o(i.VGA_Puthex) refers to ansi.o(i.VGA_Putch) for VGA_Putch
    ansi.o(i.VGA_Putint) refers to aeabi_sdivfast.o(.text) for __aeabi_uidivmod
    ansi.o(i.VGA_Putint) refers to ansi.o(i.VGA_Putch) for VGA_Putch
    ansi.o(i.VerticalBlank_CB) refers to ansi.o(.data) for .data
    rt_ctype_table.o(.text) refers to rt_locale_intlibspace.o(.text) for __rt_locale
    rt_ctype_table.o(.text) refers to lc_ctype_c.o(locale$$code) for _get_lc_ctype
    rt_memmove.o(.text) refers to rt_memcpy.o(.emb_text) for __aeabi_memcpy4
    rt_memmove.o(.text) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    aeabi_memset.o(.text) refers to rt_memclr.o(.text) for _memset
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    aeabi_idiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    rt_locale.o(.text) refers to rt_locale.o(.bss) for __rt_locale_data
    rt_locale_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    lc_ctype_c.o(locale$$data) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000012) for __rt_lib_init_lc_ctype_2
    lc_ctype_c.o(locale$$code) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000012) for __rt_lib_init_lc_ctype_2
    lc_ctype_c.o(locale$$code) refers to strcmpv6m.o(.text) for strcmp
    lc_ctype_c.o(locale$$code) refers to lc_ctype_c.o(locale$$data) for __lcctype_c_name
    rt_memcpy.o(.text) refers to rt_memcpy.o(.emb_text) for __aeabi_memcpy4
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to term.o(i.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    libinit2.o(.ARM.Collect$$libinit$$0000000F) refers (Weak) to rt_locale_intlibspace.o(.text) for __rt_locale
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers (Weak) to lc_ctype_c.o(locale$$code) for _get_lc_ctype
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f030.o(.text) for __user_initial_stackheap
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to tempstk.o(.text) for __temporary_stack_top
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to __main.o(!!!main) for __main
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_fini_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000009) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000011) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000012) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000006) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E) for __rt_lib_shutdown_user_alloc_1
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing vga-min.o(.rev16_text), (4 bytes).
    Removing vga-min.o(.revsh_text), (4 bytes).
    Removing serial.o(.rev16_text), (4 bytes).
    Removing serial.o(.revsh_text), (4 bytes).
    Removing serial.o(i.Puthex), (76 bytes).
    Removing serial.o(i.USART_Disable), (28 bytes).
    Removing serial.o(.constdata), (28 bytes).
    Removing fifo.o(.rev16_text), (4 bytes).
    Removing fifo.o(.revsh_text), (4 bytes).
    Removing fifo.o(i.FIFO_WriteAvail), (22 bytes).
    Removing fifo.o(i.Getc_Timeout), (68 bytes).
    Removing ps2.o(.rev16_text), (4 bytes).
    Removing ps2.o(.revsh_text), (4 bytes).
    Removing ps2.o(i.NumLockOff), (44 bytes).
    Removing ps2.o(i.NumLockOn), (44 bytes).
    Removing ps2.o(i.PS2_Parity), (52 bytes).
    Removing ps2.o(i.PS2_Update_LED), (36 bytes).
    Removing rcc.o(.rev16_text), (4 bytes).
    Removing rcc.o(.revsh_text), (4 bytes).
    Removing term.o(.rev16_text), (4 bytes).
    Removing term.o(.revsh_text), (4 bytes).
    Removing ansi.o(.rev16_text), (4 bytes).
    Removing ansi.o(.revsh_text), (4 bytes).
    Removing ansi.o(i.ANSICursor_MoveTo), (52 bytes).
    Removing ansi.o(i.BlankChar), (20 bytes).
    Removing ansi.o(i.Clear_CSI), (32 bytes).
    Removing ansi.o(i.Cursor_Disable), (36 bytes).
    Removing ansi.o(i.Cursor_Down), (56 bytes).
    Removing ansi.o(i.Cursor_Enable), (20 bytes).
    Removing ansi.o(i.Cursor_HorizontalAbsolute), (28 bytes).
    Removing ansi.o(i.Cursor_Left), (36 bytes).
    Removing ansi.o(i.Cursor_NextLine), (60 bytes).
    Removing ansi.o(i.Cursor_PreviousLine), (68 bytes).
    Removing ansi.o(i.Cursor_Right), (36 bytes).
    Removing ansi.o(i.Cursor_Up), (64 bytes).
    Removing ansi.o(i.OriginRow), (32 bytes).
    Removing ansi.o(i.VGA_ClearLine), (52 bytes).
    Removing ansi.o(i.VGA_ClearLineToEnd), (60 bytes).
    Removing ansi.o(i.VGA_ClearLineToStart), (56 bytes).
    Removing ansi.o(i.VGA_ClearScreen), (40 bytes).
    Removing ansi.o(i.VGA_ClearScreenToEnd), (72 bytes).
    Removing ansi.o(i.VGA_ClearScreenToStart), (56 bytes).
    Removing ansi.o(i.VGA_PutStr), (24 bytes).
    Removing ansi.o(i.VGA_Puthex), (36 bytes).
    Removing settings.o(.rev16_text), (4 bytes).
    Removing settings.o(.revsh_text), (4 bytes).

46 unused section(s) (total 1398 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_ctype_table.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_locale_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0_sigfpe.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_locale.o ABSOLUTE
    ../clib/angel/scatterp.s                 0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  tempstk.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast_div0.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/locale.s                         0x00000000   Number         0  lc_ctype_c.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memmove.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  aeabi_memset.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  strcmpv6m.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/cfplib/fpinit.c                 0x00000000   Number         0  fpinit.o ABSOLUTE
    ansi.c                                   0x00000000   Number         0  ansi.o ABSOLUTE
    ansi.c                                   0x00000000   Number         0  ansi.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    fifo.c                                   0x00000000   Number         0  fifo.o ABSOLUTE
    fifo.c                                   0x00000000   Number         0  fifo.o ABSOLUTE
    ps2.c                                    0x00000000   Number         0  ps2.o ABSOLUTE
    ps2.c                                    0x00000000   Number         0  ps2.o ABSOLUTE
    rcc.c                                    0x00000000   Number         0  rcc.o ABSOLUTE
    rcc.c                                    0x00000000   Number         0  rcc.o ABSOLUTE
    serial.c                                 0x00000000   Number         0  serial.o ABSOLUTE
    serial.c                                 0x00000000   Number         0  serial.o ABSOLUTE
    settings.c                               0x00000000   Number         0  settings.o ABSOLUTE
    settings.c                               0x00000000   Number         0  settings.o ABSOLUTE
    startup_stm32f030.s                      0x00000000   Number         0  startup_stm32f030.o ABSOLUTE
    term.c                                   0x00000000   Number         0  term.o ABSOLUTE
    term.c                                   0x00000000   Number         0  term.o ABSOLUTE
    vga-min.c                                0x00000000   Number         0  vga-min.o ABSOLUTE
    vga-min.c                                0x00000000   Number         0  vga-min.o ABSOLUTE
    vgafont.c                                0x00000000   Number         0  vgafont.o ABSOLUTE
    RESET                                    0x08000000   Section      180  startup_stm32f030.o(RESET)
    !!!main                                  0x080000b4   Section        8  __main.o(!!!main)
    !!!scatter                               0x080000bc   Section       60  __scatter.o(!!!scatter)
    !!handler_copy                           0x080000f8   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x08000114   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x08000130   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x08000132   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x08000132   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x08000132   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x08000132   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x08000132   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$0000000F          0x08000132   Section        6  libinit2.o(.ARM.Collect$$libinit$$0000000F)
    .ARM.Collect$$libinit$$00000011          0x08000138   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000012          0x08000138   Section       12  libinit2.o(.ARM.Collect$$libinit$$00000012)
    .ARM.Collect$$libinit$$00000013          0x08000144   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x08000144   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x08000144   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x08000144   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x08000144   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x08000144   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x08000144   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x08000144   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x08000144   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x08000144   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x08000144   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x08000144   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x08000144   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x08000144   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x08000144   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x08000146   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x08000148   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x08000148   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000006      0x08000148   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000006)
    .ARM.Collect$$libshutdown$$00000009      0x08000148   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000009)
    .ARM.Collect$$libshutdown$$0000000C      0x08000148   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000E      0x08000148   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E)
    .ARM.Collect$$libshutdown$$00000011      0x08000148   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000011)
    .ARM.Collect$$libshutdown$$00000012      0x08000148   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000012)
    .ARM.Collect$$rtentry$$00000000          0x0800014a   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x0800014a   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x0800014a   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x08000150   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x08000150   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x08000154   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x08000154   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x0800015c   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x0800015e   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x0800015e   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x08000162   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .emb_text                                0x08000168   Section       56  rt_memcpy.o(.emb_text)
    .text                                    0x080001a0   Section       52  startup_stm32f030.o(.text)
    .text                                    0x080001d4   Section       16  rt_ctype_table.o(.text)
    .text                                    0x080001e4   Section        0  rt_memmove.o(.text)
    .text                                    0x0800027a   Section        0  aeabi_memset.o(.text)
    .text                                    0x0800028c   Section        0  rt_memclr.o(.text)
    .text                                    0x080002cc   Section      488  aeabi_sdivfast.o(.text)
    .text                                    0x080004b4   Section        0  heapauxi.o(.text)
    .text                                    0x080004bc   Section        8  rt_locale_intlibspace.o(.text)
    .text                                    0x080004c4   Section        0  rt_memcpy.o(.text)
    .text                                    0x08000548   Section        8  libspace.o(.text)
    .text                                    0x08000550   Section      160  strcmpv6m.o(.text)
    .text                                    0x080005f0   Section       62  sys_stackheap_outer.o(.text)
    .text                                    0x0800062e   Section        0  exit.o(.text)
    .text                                    0x08000640   Section        0  sys_exit.o(.text)
    .text                                    0x0800064c   Section        2  use_no_semi.o(.text)
    .text                                    0x0800064e   Section        0  indicate_semi.o(.text)
    i.ANSI_FSM                               0x08000650   Section        0  ansi.o(i.ANSI_FSM)
    i.ANSI_Init                              0x08000720   Section        0  ansi.o(i.ANSI_Init)
    i.CSI_Sequence                           0x08000848   Section        0  ansi.o(i.CSI_Sequence)
    i.ControlCode                            0x08000da8   Section        0  ansi.o(i.ControlCode)
    i.Cursor_Reset                           0x08000ec8   Section        0  ansi.o(i.Cursor_Reset)
    i.Cursor_RestorePosition                 0x08000ef8   Section        0  ansi.o(i.Cursor_RestorePosition)
    i.Cursor_SavePosition                    0x08000f94   Section        0  ansi.o(i.Cursor_SavePosition)
    i.Cursor_Task                            0x08001050   Section        0  ansi.o(i.Cursor_Task)
    i.Delay                                  0x080010bc   Section        0  vga-min.o(i.Delay)
    i.ESC_Sequence                           0x080010cc   Section        0  ansi.o(i.ESC_Sequence)
    i.EXTI0_1_IRQHandler                     0x080011c0   Section        0  ps2.o(i.EXTI0_1_IRQHandler)
    i.FIFO_Clear                             0x080012e0   Section        0  fifo.o(i.FIFO_Clear)
    i.FIFO_Read                              0x080012e8   Section        0  fifo.o(i.FIFO_Read)
    i.FIFO_ReadAvail                         0x0800130a   Section        0  fifo.o(i.FIFO_ReadAvail)
    i.FIFO_Write                             0x0800131a   Section        0  fifo.o(i.FIFO_Write)
    i.Getc                                   0x08001344   Section        0  fifo.o(i.Getc)
    i.PS2_Init                               0x08001360   Section        0  ps2.o(i.PS2_Init)
    i.PS2_Send                               0x080013c0   Section        0  ps2.o(i.PS2_Send)
    i.PS2_Subscribe                          0x08001468   Section        0  ps2.o(i.PS2_Subscribe)
    i.PS2_Task                               0x08001478   Section        0  ps2.o(i.PS2_Task)
    i.PendSV_Handler                         0x08001758   Section        0  vga-min.o(i.PendSV_Handler)
    i.PhysicalCursor_MoveTo                  0x08001784   Section        0  ansi.o(i.PhysicalCursor_MoveTo)
    i.PutStr                                 0x080017bc   Section        0  serial.o(i.PutStr)
    i.Putchar                                0x080017f0   Section        0  serial.o(i.Putchar)
    i.Putint                                 0x08001814   Section        0  serial.o(i.Putint)
    i.ScrollDown                             0x0800184c   Section        0  ansi.o(i.ScrollDown)
    i.ScrollRegionDown                       0x080018bc   Section        0  ansi.o(i.ScrollRegionDown)
    i.ScrollRegionUp                         0x08001910   Section        0  ansi.o(i.ScrollRegionUp)
    i.ScrollUp                               0x08001968   Section        0  ansi.o(i.ScrollUp)
    i.SystemInit                             0x080019f0   Section        0  rcc.o(i.SystemInit)
    i.TIM3_IRQHandler                        0x08001a40   Section        0  vga-min.o(i.TIM3_IRQHandler)
    i.USART1_IRQHandler                      0x08001c78   Section        0  serial.o(i.USART1_IRQHandler)
    i.USART_Init                             0x08001cc4   Section        0  serial.o(i.USART_Init)
    i.VGA_Init                               0x08001d24   Section        0  vga-min.o(i.VGA_Init)
    i.VGA_Putch                              0x08001e58   Section        0  ansi.o(i.VGA_Putch)
    i.VGA_Putint                             0x08001eec   Section        0  ansi.o(i.VGA_Putint)
    i.VerticalBlank_CB                       0x08001f0c   Section        0  ansi.o(i.VerticalBlank_CB)
    i.main                                   0x08001f40   Section        0  term.o(i.main)
    i.onKeyUp                                0x08001fb4   Section        0  term.o(i.onKeyUp)
    locale$$code                             0x08001fc4   Section       44  lc_ctype_c.o(locale$$code)
    .constdata                               0x08001ff0   Section      414  ps2.o(.constdata)
    .constdata                               0x08002190   Section        8  term.o(.constdata)
    .constdata                               0x08002198   Section     4096  vgafont.o(.constdata)
    .conststring                             0x08003198   Section       88  ps2.o(.conststring)
    locale$$data                             0x08003210   Section      272  lc_ctype_c.o(locale$$data)
    __lcctype_c_name                         0x08003214   Data           2  lc_ctype_c.o(locale$$data)
    __lcctype_c_start                        0x0800321c   Data           0  lc_ctype_c.o(locale$$data)
    __lcctype_c_end                          0x08003320   Data           0  lc_ctype_c.o(locale$$data)
    .data                                    0x20000000   Section        2  vga-min.o(.data)
    .data                                    0x20000002   Section       86  serial.o(.data)
    .data                                    0x20000058   Section      108  ps2.o(.data)
    PS2_Fsm                                  0x20000058   Data           1  ps2.o(.data)
    PS2_Cmd                                  0x20000059   Data           1  ps2.o(.data)
    PS2_Cmd_Arg                              0x2000005a   Data           1  ps2.o(.data)
    Modifiers                                0x2000005c   Data           2  ps2.o(.data)
    PS2_IF                                   0x2000005e   Data           2  ps2.o(.data)
    PS2_onKeyUp                              0x20000060   Data           4  ps2.o(.data)
    .data                                    0x200000c4   Section        4  term.o(.data)
    mode                                     0x200000c4   Data           4  term.o(.data)
    .data                                    0x200000c8   Section       17  ansi.o(.data)
    Saved_Prefs                              0x200000cc   Data           3  ansi.o(.data)
    Saved_Cursor                             0x200000d4   Data           5  ansi.o(.data)
    .bss                                     0x200000dc   Section     2494  vga-min.o(.bss)
    ScanLineBuf                              0x20000a48   Data          82  vga-min.o(.bss)
    .bss                                     0x20000a9a   Section       19  ansi.o(.bss)
    CSI                                      0x20000a9a   Data          19  ansi.o(.bss)
    .bss                                     0x20000ab0   Section       96  libspace.o(.bss)
    HEAP                                     0x20000b10   Section        0  startup_stm32f030.o(HEAP)
    STACK                                    0x20000b10   Section      512  startup_stm32f030.o(STACK)
    Heap_Mem                                 0x20000b10   Data           0  startup_stm32f030.o(HEAP)
    Stack_Mem                                0x20000b10   Data         512  startup_stm32f030.o(STACK)
    __initial_sp                             0x20000d10   Data           0  startup_stm32f030.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  term.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_fini_                               - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x000000b4   Number         0  startup_stm32f030.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f030.o(RESET)
    __Vectors_End                            0x080000b4   Data           0  startup_stm32f030.o(RESET)
    __main                                   0x080000b5   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x080000bd   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x080000bd   Thumb Code    52  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x080000bd   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x080000cd   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x080000f9   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x08000115   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x08000131   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x08000133   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_heap_1                     0x08000133   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_common                  0x08000133   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000F)
    __rt_lib_init_preinit_1                  0x08000133   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x08000133   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_user_alloc_1               0x08000133   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x08000139   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_2                 0x08000139   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000012)
    __rt_lib_init_alloca_1                   0x08000145   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x08000145   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x08000145   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x08000145   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x08000145   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x08000145   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_trap_1                  0x08000145   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x08000145   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_lc_ctype_1                 0x08000145   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x08000145   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x08000145   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x08000145   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_return                     0x08000145   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x08000145   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x08000145   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_shutdown                        0x08000147   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x08000149   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_fini_1                 0x08000149   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x08000149   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000009)
    __rt_lib_shutdown_heap_1                 0x08000149   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000011)
    __rt_lib_shutdown_return                 0x08000149   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000012)
    __rt_lib_shutdown_signal_1               0x08000149   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_lib_shutdown_stdio_1                0x08000149   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000006)
    __rt_lib_shutdown_user_alloc_1           0x08000149   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E)
    __rt_entry                               0x0800014b   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x0800014b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x0800014b   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x08000151   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x08000151   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x08000155   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x08000155   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x0800015d   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x0800015f   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x0800015f   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x08000163   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    __aeabi_memcpy4                          0x08000169   Thumb Code    56  rt_memcpy.o(.emb_text)
    __aeabi_memcpy8                          0x08000169   Thumb Code     0  rt_memcpy.o(.emb_text)
    Reset_Handler                            0x080001a1   Thumb Code     8  startup_stm32f030.o(.text)
    NMI_Handler                              0x080001a9   Thumb Code     2  startup_stm32f030.o(.text)
    HardFault_Handler                        0x080001ab   Thumb Code     2  startup_stm32f030.o(.text)
    SVC_Handler                              0x080001ad   Thumb Code     2  startup_stm32f030.o(.text)
    SysTick_Handler                          0x080001b1   Thumb Code     2  startup_stm32f030.o(.text)
    ADC1_IRQHandler                          0x080001b3   Thumb Code     0  startup_stm32f030.o(.text)
    DMA1_Channel1_IRQHandler                 0x080001b3   Thumb Code     0  startup_stm32f030.o(.text)
    DMA1_Channel2_3_IRQHandler               0x080001b3   Thumb Code     0  startup_stm32f030.o(.text)
    DMA1_Channel4_5_IRQHandler               0x080001b3   Thumb Code     0  startup_stm32f030.o(.text)
    EXTI2_3_IRQHandler                       0x080001b3   Thumb Code     0  startup_stm32f030.o(.text)
    EXTI4_15_IRQHandler                      0x080001b3   Thumb Code     0  startup_stm32f030.o(.text)
    FLASH_IRQHandler                         0x080001b3   Thumb Code     0  startup_stm32f030.o(.text)
    I2C1_IRQHandler                          0x080001b3   Thumb Code     0  startup_stm32f030.o(.text)
    I2C2_IRQHandler                          0x080001b3   Thumb Code     0  startup_stm32f030.o(.text)
    RCC_IRQHandler                           0x080001b3   Thumb Code     0  startup_stm32f030.o(.text)
    RTC_IRQHandler                           0x080001b3   Thumb Code     0  startup_stm32f030.o(.text)
    SPI1_IRQHandler                          0x080001b3   Thumb Code     0  startup_stm32f030.o(.text)
    SPI2_IRQHandler                          0x080001b3   Thumb Code     0  startup_stm32f030.o(.text)
    TIM14_IRQHandler                         0x080001b3   Thumb Code     0  startup_stm32f030.o(.text)
    TIM15_IRQHandler                         0x080001b3   Thumb Code     0  startup_stm32f030.o(.text)
    TIM16_IRQHandler                         0x080001b3   Thumb Code     0  startup_stm32f030.o(.text)
    TIM17_IRQHandler                         0x080001b3   Thumb Code     0  startup_stm32f030.o(.text)
    TIM1_BRK_UP_TRG_COM_IRQHandler           0x080001b3   Thumb Code     0  startup_stm32f030.o(.text)
    TIM1_CC_IRQHandler                       0x080001b3   Thumb Code     0  startup_stm32f030.o(.text)
    USART2_IRQHandler                        0x080001b3   Thumb Code     0  startup_stm32f030.o(.text)
    WWDG_IRQHandler                          0x080001b3   Thumb Code     0  startup_stm32f030.o(.text)
    __user_initial_stackheap                 0x080001b5   Thumb Code     0  startup_stm32f030.o(.text)
    __rt_ctype_table                         0x080001d5   Thumb Code    16  rt_ctype_table.o(.text)
    __aeabi_memmove4                         0x080001e5   Thumb Code    70  rt_memmove.o(.text)
    __aeabi_memmove8                         0x080001e5   Thumb Code     0  rt_memmove.o(.text)
    __aeabi_memmove                          0x0800022b   Thumb Code    80  rt_memmove.o(.text)
    __rt_memmove                             0x0800022b   Thumb Code     0  rt_memmove.o(.text)
    __aeabi_memset                           0x0800027b   Thumb Code    18  aeabi_memset.o(.text)
    _memset_w                                0x0800028d   Thumb Code    26  rt_memclr.o(.text)
    _memset                                  0x080002a7   Thumb Code    30  rt_memclr.o(.text)
    __aeabi_memclr                           0x080002c5   Thumb Code     4  rt_memclr.o(.text)
    __rt_memclr                              0x080002c5   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr4                          0x080002c9   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr8                          0x080002c9   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr_w                            0x080002c9   Thumb Code     4  rt_memclr.o(.text)
    __aeabi_uidiv                            0x080002cd   Thumb Code     0  aeabi_sdivfast.o(.text)
    __aeabi_uidivmod                         0x080002cd   Thumb Code    28  aeabi_sdivfast.o(.text)
    __aeabi_idiv                             0x080002e9   Thumb Code     0  aeabi_sdivfast.o(.text)
    __aeabi_idivmod                          0x080002e9   Thumb Code   460  aeabi_sdivfast.o(.text)
    __use_two_region_memory                  0x080004b5   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x080004b7   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x080004b9   Thumb Code     2  heapauxi.o(.text)
    __rt_locale                              0x080004bd   Thumb Code     8  rt_locale_intlibspace.o(.text)
    __aeabi_memcpy                           0x080004c5   Thumb Code   130  rt_memcpy.o(.text)
    __rt_memcpy                              0x080004c5   Thumb Code     0  rt_memcpy.o(.text)
    __user_libspace                          0x08000549   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x08000549   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x08000549   Thumb Code     0  libspace.o(.text)
    strcmp                                   0x08000551   Thumb Code   160  strcmpv6m.o(.text)
    __user_setup_stackheap                   0x080005f1   Thumb Code    62  sys_stackheap_outer.o(.text)
    exit                                     0x0800062f   Thumb Code    16  exit.o(.text)
    _sys_exit                                0x08000641   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x0800064d   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x0800064d   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x0800064f   Thumb Code     0  indicate_semi.o(.text)
    ANSI_FSM                                 0x08000651   Thumb Code   204  ansi.o(i.ANSI_FSM)
    ANSI_Init                                0x08000721   Thumb Code   260  ansi.o(i.ANSI_Init)
    CSI_Sequence                             0x08000849   Thumb Code  1354  ansi.o(i.CSI_Sequence)
    ControlCode                              0x08000da9   Thumb Code   274  ansi.o(i.ControlCode)
    Cursor_Reset                             0x08000ec9   Thumb Code    38  ansi.o(i.Cursor_Reset)
    Cursor_RestorePosition                   0x08000ef9   Thumb Code   140  ansi.o(i.Cursor_RestorePosition)
    Cursor_SavePosition                      0x08000f95   Thumb Code   170  ansi.o(i.Cursor_SavePosition)
    Cursor_Task                              0x08001051   Thumb Code   100  ansi.o(i.Cursor_Task)
    Delay                                    0x080010bd   Thumb Code    12  vga-min.o(i.Delay)
    ESC_Sequence                             0x080010cd   Thumb Code   222  ansi.o(i.ESC_Sequence)
    EXTI0_1_IRQHandler                       0x080011c1   Thumb Code   270  ps2.o(i.EXTI0_1_IRQHandler)
    FIFO_Clear                               0x080012e1   Thumb Code     8  fifo.o(i.FIFO_Clear)
    FIFO_Read                                0x080012e9   Thumb Code    34  fifo.o(i.FIFO_Read)
    FIFO_ReadAvail                           0x0800130b   Thumb Code    16  fifo.o(i.FIFO_ReadAvail)
    FIFO_Write                               0x0800131b   Thumb Code    42  fifo.o(i.FIFO_Write)
    Getc                                     0x08001345   Thumb Code    26  fifo.o(i.Getc)
    PS2_Init                                 0x08001361   Thumb Code    68  ps2.o(i.PS2_Init)
    PS2_Send                                 0x080013c1   Thumb Code   156  ps2.o(i.PS2_Send)
    PS2_Subscribe                            0x08001469   Thumb Code    10  ps2.o(i.PS2_Subscribe)
    PS2_Task                                 0x08001479   Thumb Code   700  ps2.o(i.PS2_Task)
    PendSV_Handler                           0x08001759   Thumb Code    30  vga-min.o(i.PendSV_Handler)
    PhysicalCursor_MoveTo                    0x08001785   Thumb Code    44  ansi.o(i.PhysicalCursor_MoveTo)
    PutStr                                   0x080017bd   Thumb Code    42  serial.o(i.PutStr)
    Putchar                                  0x080017f1   Thumb Code    28  serial.o(i.Putchar)
    Putint                                   0x08001815   Thumb Code    48  serial.o(i.Putint)
    ScrollDown                               0x0800184d   Thumb Code   100  ansi.o(i.ScrollDown)
    ScrollRegionDown                         0x080018bd   Thumb Code    72  ansi.o(i.ScrollRegionDown)
    ScrollRegionUp                           0x08001911   Thumb Code    74  ansi.o(i.ScrollRegionUp)
    ScrollUp                                 0x08001969   Thumb Code   124  ansi.o(i.ScrollUp)
    SystemInit                               0x080019f1   Thumb Code    70  rcc.o(i.SystemInit)
    TIM3_IRQHandler                          0x08001a41   Thumb Code   524  vga-min.o(i.TIM3_IRQHandler)
    USART1_IRQHandler                        0x08001c79   Thumb Code    58  serial.o(i.USART1_IRQHandler)
    USART_Init                               0x08001cc5   Thumb Code    66  serial.o(i.USART_Init)
    VGA_Init                                 0x08001d25   Thumb Code   236  vga-min.o(i.VGA_Init)
    VGA_Putch                                0x08001e59   Thumb Code   136  ansi.o(i.VGA_Putch)
    VGA_Putint                               0x08001eed   Thumb Code    30  ansi.o(i.VGA_Putint)
    VerticalBlank_CB                         0x08001f0d   Thumb Code    48  ansi.o(i.VerticalBlank_CB)
    main                                     0x08001f41   Thumb Code    92  term.o(i.main)
    onKeyUp                                  0x08001fb5   Thumb Code    12  term.o(i.onKeyUp)
    _get_lc_ctype                            0x08001fc5   Thumb Code    44  lc_ctype_c.o(locale$$code)
    Scancode_Translations                    0x08001ff0   Data         144  ps2.o(.constdata)
    Unshifted_Regular                        0x08002080   Data          89  ps2.o(.constdata)
    Shifted_Regular                          0x080020d9   Data          89  ps2.o(.constdata)
    Keypad_Numeric                           0x08002132   Data          28  ps2.o(.constdata)
    Keypad_Regular                           0x0800214e   Data          28  ps2.o(.constdata)
    Escaped_Regular                          0x0800216a   Data          36  ps2.o(.constdata)
    FONT_TABLE                               0x08002198   Data        4096  vgafont.o(.constdata)
    Region$$Table$$Base                      0x080031f0   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08003210   Number         0  anon$$obj.o(Region$$Table)
    __ctype                                  0x0800321d   Data           0  lc_ctype_c.o(locale$$data)
    MicroTimer0                              0x20000000   Data           1  vga-min.o(.data)
    MicroTimer1                              0x20000001   Data           1  vga-min.o(.data)
    RxBuf                                    0x20000002   Data          67  serial.o(.data)
    TxBuf                                    0x20000045   Data          19  serial.o(.data)
    PS2_Buf                                  0x20000064   Data           7  ps2.o(.data)
    Ansi_Key_Sequences                       0x2000006c   Data          88  ps2.o(.data)
    wrap_next                                0x200000c8   Data           1  ansi.o(.data)
    ANSI_Prefs                               0x200000c9   Data           3  ansi.o(.data)
    Cursor                                   0x200000cf   Data           5  ansi.o(.data)
    VGA                                      0x200000dc   Data          12  vga-min.o(.bss)
    TextBuffer                               0x200000e8   Data        2400  vga-min.o(.bss)
    __libspace_start                         0x20000ab0   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x20000b10   Data           0  libspace.o(.bss)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080000b5

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x000033fc, Max: 0x00004000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x00003320, Max: 0x00004000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000000b4   Data   RO            3    RESET               startup_stm32f030.o
    0x080000b4   0x080000b4   0x00000008   Code   RO          638  * !!!main             c_p.l(__main.o)
    0x080000bc   0x080000bc   0x0000003c   Code   RO          823    !!!scatter          c_p.l(__scatter.o)
    0x080000f8   0x080000f8   0x0000001a   Code   RO          825    !!handler_copy      c_p.l(__scatter_copy.o)
    0x08000112   0x08000112   0x00000002   PAD
    0x08000114   0x08000114   0x0000001c   Code   RO          827    !!handler_zi        c_p.l(__scatter_zi.o)
    0x08000130   0x08000130   0x00000002   Code   RO          740    .ARM.Collect$$libinit$$00000000  c_p.l(libinit.o)
    0x08000132   0x08000132   0x00000000   Code   RO          680    .ARM.Collect$$libinit$$00000002  c_p.l(libinit2.o)
    0x08000132   0x08000132   0x00000000   Code   RO          682    .ARM.Collect$$libinit$$00000004  c_p.l(libinit2.o)
    0x08000132   0x08000132   0x00000000   Code   RO          685    .ARM.Collect$$libinit$$0000000A  c_p.l(libinit2.o)
    0x08000132   0x08000132   0x00000000   Code   RO          687    .ARM.Collect$$libinit$$0000000C  c_p.l(libinit2.o)
    0x08000132   0x08000132   0x00000000   Code   RO          689    .ARM.Collect$$libinit$$0000000E  c_p.l(libinit2.o)
    0x08000132   0x08000132   0x00000006   Code   RO          690    .ARM.Collect$$libinit$$0000000F  c_p.l(libinit2.o)
    0x08000138   0x08000138   0x00000000   Code   RO          692    .ARM.Collect$$libinit$$00000011  c_p.l(libinit2.o)
    0x08000138   0x08000138   0x0000000c   Code   RO          693    .ARM.Collect$$libinit$$00000012  c_p.l(libinit2.o)
    0x08000144   0x08000144   0x00000000   Code   RO          694    .ARM.Collect$$libinit$$00000013  c_p.l(libinit2.o)
    0x08000144   0x08000144   0x00000000   Code   RO          696    .ARM.Collect$$libinit$$00000015  c_p.l(libinit2.o)
    0x08000144   0x08000144   0x00000000   Code   RO          698    .ARM.Collect$$libinit$$00000017  c_p.l(libinit2.o)
    0x08000144   0x08000144   0x00000000   Code   RO          700    .ARM.Collect$$libinit$$00000019  c_p.l(libinit2.o)
    0x08000144   0x08000144   0x00000000   Code   RO          702    .ARM.Collect$$libinit$$0000001B  c_p.l(libinit2.o)
    0x08000144   0x08000144   0x00000000   Code   RO          704    .ARM.Collect$$libinit$$0000001D  c_p.l(libinit2.o)
    0x08000144   0x08000144   0x00000000   Code   RO          706    .ARM.Collect$$libinit$$0000001F  c_p.l(libinit2.o)
    0x08000144   0x08000144   0x00000000   Code   RO          708    .ARM.Collect$$libinit$$00000021  c_p.l(libinit2.o)
    0x08000144   0x08000144   0x00000000   Code   RO          710    .ARM.Collect$$libinit$$00000023  c_p.l(libinit2.o)
    0x08000144   0x08000144   0x00000000   Code   RO          712    .ARM.Collect$$libinit$$00000025  c_p.l(libinit2.o)
    0x08000144   0x08000144   0x00000000   Code   RO          716    .ARM.Collect$$libinit$$0000002C  c_p.l(libinit2.o)
    0x08000144   0x08000144   0x00000000   Code   RO          718    .ARM.Collect$$libinit$$0000002E  c_p.l(libinit2.o)
    0x08000144   0x08000144   0x00000000   Code   RO          720    .ARM.Collect$$libinit$$00000030  c_p.l(libinit2.o)
    0x08000144   0x08000144   0x00000000   Code   RO          722    .ARM.Collect$$libinit$$00000032  c_p.l(libinit2.o)
    0x08000144   0x08000144   0x00000002   Code   RO          723    .ARM.Collect$$libinit$$00000033  c_p.l(libinit2.o)
    0x08000146   0x08000146   0x00000002   Code   RO          788    .ARM.Collect$$libshutdown$$00000000  c_p.l(libshutdown.o)
    0x08000148   0x08000148   0x00000000   Code   RO          804    .ARM.Collect$$libshutdown$$00000002  c_p.l(libshutdown2.o)
    0x08000148   0x08000148   0x00000000   Code   RO          806    .ARM.Collect$$libshutdown$$00000004  c_p.l(libshutdown2.o)
    0x08000148   0x08000148   0x00000000   Code   RO          808    .ARM.Collect$$libshutdown$$00000006  c_p.l(libshutdown2.o)
    0x08000148   0x08000148   0x00000000   Code   RO          811    .ARM.Collect$$libshutdown$$00000009  c_p.l(libshutdown2.o)
    0x08000148   0x08000148   0x00000000   Code   RO          814    .ARM.Collect$$libshutdown$$0000000C  c_p.l(libshutdown2.o)
    0x08000148   0x08000148   0x00000000   Code   RO          816    .ARM.Collect$$libshutdown$$0000000E  c_p.l(libshutdown2.o)
    0x08000148   0x08000148   0x00000000   Code   RO          819    .ARM.Collect$$libshutdown$$00000011  c_p.l(libshutdown2.o)
    0x08000148   0x08000148   0x00000002   Code   RO          820    .ARM.Collect$$libshutdown$$00000012  c_p.l(libshutdown2.o)
    0x0800014a   0x0800014a   0x00000000   Code   RO          640    .ARM.Collect$$rtentry$$00000000  c_p.l(__rtentry.o)
    0x0800014a   0x0800014a   0x00000000   Code   RO          661    .ARM.Collect$$rtentry$$00000002  c_p.l(__rtentry2.o)
    0x0800014a   0x0800014a   0x00000006   Code   RO          673    .ARM.Collect$$rtentry$$00000004  c_p.l(__rtentry4.o)
    0x08000150   0x08000150   0x00000000   Code   RO          663    .ARM.Collect$$rtentry$$00000009  c_p.l(__rtentry2.o)
    0x08000150   0x08000150   0x00000004   Code   RO          664    .ARM.Collect$$rtentry$$0000000A  c_p.l(__rtentry2.o)
    0x08000154   0x08000154   0x00000000   Code   RO          666    .ARM.Collect$$rtentry$$0000000C  c_p.l(__rtentry2.o)
    0x08000154   0x08000154   0x00000008   Code   RO          667    .ARM.Collect$$rtentry$$0000000D  c_p.l(__rtentry2.o)
    0x0800015c   0x0800015c   0x00000002   Code   RO          744    .ARM.Collect$$rtexit$$00000000  c_p.l(rtexit.o)
    0x0800015e   0x0800015e   0x00000000   Code   RO          761    .ARM.Collect$$rtexit$$00000002  c_p.l(rtexit2.o)
    0x0800015e   0x0800015e   0x00000004   Code   RO          762    .ARM.Collect$$rtexit$$00000003  c_p.l(rtexit2.o)
    0x08000162   0x08000162   0x00000006   Code   RO          763    .ARM.Collect$$rtexit$$00000004  c_p.l(rtexit2.o)
    0x08000168   0x08000168   0x00000038   Code   RO          653    .emb_text           c_p.l(rt_memcpy.o)
    0x080001a0   0x080001a0   0x00000034   Code   RO            4    .text               startup_stm32f030.o
    0x080001d4   0x080001d4   0x00000010   Code   RO          624    .text               c_p.l(rt_ctype_table.o)
    0x080001e4   0x080001e4   0x00000096   Code   RO          626    .text               c_p.l(rt_memmove.o)
    0x0800027a   0x0800027a   0x00000012   Code   RO          628    .text               c_p.l(aeabi_memset.o)
    0x0800028c   0x0800028c   0x00000040   Code   RO          630    .text               c_p.l(rt_memclr.o)
    0x080002cc   0x080002cc   0x000001e8   Code   RO          632    .text               c_p.l(aeabi_sdivfast.o)
    0x080004b4   0x080004b4   0x00000006   Code   RO          636    .text               c_p.l(heapauxi.o)
    0x080004ba   0x080004ba   0x00000002   PAD
    0x080004bc   0x080004bc   0x00000008   Code   RO          648    .text               c_p.l(rt_locale_intlibspace.o)
    0x080004c4   0x080004c4   0x00000082   Code   RO          654    .text               c_p.l(rt_memcpy.o)
    0x08000546   0x08000546   0x00000002   PAD
    0x08000548   0x08000548   0x00000008   Code   RO          657    .text               c_p.l(libspace.o)
    0x08000550   0x08000550   0x000000a0   Code   RO          677    .text               c_p.l(strcmpv6m.o)
    0x080005f0   0x080005f0   0x0000003e   Code   RO          724    .text               c_p.l(sys_stackheap_outer.o)
    0x0800062e   0x0800062e   0x00000010   Code   RO          727    .text               c_p.l(exit.o)
    0x0800063e   0x0800063e   0x00000002   PAD
    0x08000640   0x08000640   0x0000000c   Code   RO          758    .text               c_p.l(sys_exit.o)
    0x0800064c   0x0800064c   0x00000002   Code   RO          779    .text               c_p.l(use_no_semi.o)
    0x0800064e   0x0800064e   0x00000000   Code   RO          781    .text               c_p.l(indicate_semi.o)
    0x0800064e   0x0800064e   0x00000002   PAD
    0x08000650   0x08000650   0x000000d0   Code   RO          377    i.ANSI_FSM          ansi.o
    0x08000720   0x08000720   0x00000128   Code   RO          378    i.ANSI_Init         ansi.o
    0x08000848   0x08000848   0x00000560   Code   RO          380    i.CSI_Sequence      ansi.o
    0x08000da8   0x08000da8   0x00000120   Code   RO          382    i.ControlCode       ansi.o
    0x08000ec8   0x08000ec8   0x00000030   Code   RO          390    i.Cursor_Reset      ansi.o
    0x08000ef8   0x08000ef8   0x0000009c   Code   RO          391    i.Cursor_RestorePosition  ansi.o
    0x08000f94   0x08000f94   0x000000bc   Code   RO          393    i.Cursor_SavePosition  ansi.o
    0x08001050   0x08001050   0x0000006c   Code   RO          394    i.Cursor_Task       ansi.o
    0x080010bc   0x080010bc   0x00000010   Code   RO           12    i.Delay             vga-min.o
    0x080010cc   0x080010cc   0x000000f4   Code   RO          396    i.ESC_Sequence      ansi.o
    0x080011c0   0x080011c0   0x00000120   Code   RO          217    i.EXTI0_1_IRQHandler  ps2.o
    0x080012e0   0x080012e0   0x00000008   Code   RO          160    i.FIFO_Clear        fifo.o
    0x080012e8   0x080012e8   0x00000022   Code   RO          161    i.FIFO_Read         fifo.o
    0x0800130a   0x0800130a   0x00000010   Code   RO          162    i.FIFO_ReadAvail    fifo.o
    0x0800131a   0x0800131a   0x0000002a   Code   RO          163    i.FIFO_Write        fifo.o
    0x08001344   0x08001344   0x0000001a   Code   RO          165    i.Getc              fifo.o
    0x0800135e   0x0800135e   0x00000002   PAD
    0x08001360   0x08001360   0x00000060   Code   RO          220    i.PS2_Init          ps2.o
    0x080013c0   0x080013c0   0x000000a8   Code   RO          222    i.PS2_Send          ps2.o
    0x08001468   0x08001468   0x00000010   Code   RO          223    i.PS2_Subscribe     ps2.o
    0x08001478   0x08001478   0x000002e0   Code   RO          224    i.PS2_Task          ps2.o
    0x08001758   0x08001758   0x0000002c   Code   RO           13    i.PendSV_Handler    vga-min.o
    0x08001784   0x08001784   0x00000038   Code   RO          398    i.PhysicalCursor_MoveTo  ansi.o
    0x080017bc   0x080017bc   0x00000034   Code   RO           91    i.PutStr            serial.o
    0x080017f0   0x080017f0   0x00000024   Code   RO           92    i.Putchar           serial.o
    0x08001814   0x08001814   0x00000038   Code   RO           94    i.Putint            serial.o
    0x0800184c   0x0800184c   0x00000070   Code   RO          399    i.ScrollDown        ansi.o
    0x080018bc   0x080018bc   0x00000054   Code   RO          400    i.ScrollRegionDown  ansi.o
    0x08001910   0x08001910   0x00000058   Code   RO          401    i.ScrollRegionUp    ansi.o
    0x08001968   0x08001968   0x00000088   Code   RO          402    i.ScrollUp          ansi.o
    0x080019f0   0x080019f0   0x00000050   Code   RO          316    i.SystemInit        rcc.o
    0x08001a40   0x08001a40   0x00000238   Code   RO           14    i.TIM3_IRQHandler   vga-min.o
    0x08001c78   0x08001c78   0x0000004c   Code   RO           95    i.USART1_IRQHandler  serial.o
    0x08001cc4   0x08001cc4   0x00000060   Code   RO           97    i.USART_Init        serial.o
    0x08001d24   0x08001d24   0x00000134   Code   RO           15    i.VGA_Init          vga-min.o
    0x08001e58   0x08001e58   0x00000094   Code   RO          410    i.VGA_Putch         ansi.o
    0x08001eec   0x08001eec   0x0000001e   Code   RO          412    i.VGA_Putint        ansi.o
    0x08001f0a   0x08001f0a   0x00000002   PAD
    0x08001f0c   0x08001f0c   0x00000034   Code   RO          413    i.VerticalBlank_CB  ansi.o
    0x08001f40   0x08001f40   0x00000074   Code   RO          336    i.main              term.o
    0x08001fb4   0x08001fb4   0x00000010   Code   RO          337    i.onKeyUp           term.o
    0x08001fc4   0x08001fc4   0x0000002c   Code   RO          651    locale$$code        c_p.l(lc_ctype_c.o)
    0x08001ff0   0x08001ff0   0x0000019e   Data   RO          226    .constdata          ps2.o
    0x0800218e   0x0800218e   0x00000002   PAD
    0x08002190   0x08002190   0x00000008   Data   RO          338    .constdata          term.o
    0x08002198   0x08002198   0x00001000   Data   RO          596    .constdata          vgafont.o
    0x08003198   0x08003198   0x00000058   Data   RO          227    .conststring        ps2.o
    0x080031f0   0x080031f0   0x00000020   Data   RO          821    Region$$Table       anon$$obj.o
    0x08003210   0x08003210   0x00000110   Data   RO          650    locale$$data        c_p.l(lc_ctype_c.o)


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x08003320, Size: 0x00000d10, Max: 0x00001000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x08003320   0x00000002   Data   RW           17    .data               vga-min.o
    0x20000002   0x08003322   0x00000056   Data   RW           99    .data               serial.o
    0x20000058   0x08003378   0x0000006c   Data   RW          228    .data               ps2.o
    0x200000c4   0x080033e4   0x00000004   Data   RW          339    .data               term.o
    0x200000c8   0x080033e8   0x00000011   Data   RW          415    .data               ansi.o
    0x200000d9   0x080033f9   0x00000003   PAD
    0x200000dc        -       0x000009be   Zero   RW           16    .bss                vga-min.o
    0x20000a9a        -       0x00000013   Zero   RW          414    .bss                ansi.o
    0x20000aad   0x080033f9   0x00000003   PAD
    0x20000ab0        -       0x00000060   Zero   RW          658    .bss                c_p.l(libspace.o)
    0x20000b10        -       0x00000000   Zero   RW            2    HEAP                startup_stm32f030.o
    0x20000b10        -       0x00000200   Zero   RW            1    STACK               startup_stm32f030.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

      3618        308          0         17         19      15103   ansi.o
       126          0          0          0          0       2936   fifo.o
      1304        124        502        108          0      10632   ps2.o
        80         10          0          0          0        413   rcc.o
       316         74          0         86          0       4322   serial.o
        52         22        180          0        512        624   startup_stm32f030.o
       132         28          8          4          0       1085   term.o
       936        134          0          2       2494     160063   vga-min.o
         0          0       4096          0          0        549   vgafont.o

    ----------------------------------------------------------------------
      6568        700       4820        220       3028     195727   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         4          0          2          3          3          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        60          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        18          0          0          0          0         68   aeabi_memset.o
       488          0          0          0          0         92   aeabi_sdivfast.o
        16          0          0          0          0         68   exit.o
         6          0          0          0          0        136   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
        44         10        272          0          0         76   lc_ctype_c.o
         2          0          0          0          0          0   libinit.o
        20          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        16          4          0          0          0         76   rt_ctype_table.o
         8          4          0          0          0         68   rt_locale_intlibspace.o
        64          0          0          0          0        108   rt_memclr.o
       186          0          0          0          0        144   rt_memcpy.o
       150          0          0          0          0        104   rt_memmove.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
       160          4          0          0          0         80   strcmpv6m.o
        12          4          0          0          0         60   sys_exit.o
        62          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o

    ----------------------------------------------------------------------
      1428         38        272          0         96       1364   Library Totals
        10          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      1418         38        272          0         96       1364   c_p.l

    ----------------------------------------------------------------------
      1428         38        272          0         96       1364   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      7996        738       5092        220       3124     194927   Grand Totals
      7996        738       5092        220       3124     194927   ELF Image Totals
      7996        738       5092        220          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                13088 (  12.78kB)
    Total RW  Size (RW Data + ZI Data)              3344 (   3.27kB)
    Total ROM Size (Code + RO Data + RW Data)      13308 (  13.00kB)

==============================================================================

